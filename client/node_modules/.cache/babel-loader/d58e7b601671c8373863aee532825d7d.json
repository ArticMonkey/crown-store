{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\4 - Training\\\\React-Playground\\\\React Redux\\\\crown-store\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"E:\\\\4 - Training\\\\React-Playground\\\\React Redux\\\\crown-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import firebase from\"firebase/app\";import\"firebase/firestore\";import\"firebase/auth\";var config={apiKey:\"AIzaSyCoKey_zuOkMEmVCmC7xy91OGLhwhVbhzc\",authDomain:\"crwn-db-dc449.firebaseapp.com\",databaseURL:\"https://crwn-db-dc449.firebaseio.com\",projectId:\"crwn-db-dc449\",storageBucket:\"crwn-db-dc449.appspot.com\",messagingSenderId:\"961035834696\",appId:\"1:961035834696:web:53b242aff63f646dc88f7d\",measurementId:\"G-FBGM1FM3GM\"};firebase.initializeApp(config);// Firebase authentification\nexport var createUserProfileDocument=function createUserProfileDocument(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.async(function createUserProfileDocument$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return _regeneratorRuntime.awrap(userRef.get());case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return _regeneratorRuntime.awrap(userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData)));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log(\"error creating user\",_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},null,null,[[9,14]]);};// Firebase Add Collection and Document\nexport var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:\"select_account\"});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["E:/4 - Training/React-Playground/React Redux/crown-store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"0RAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE,yCADK,CAEbC,UAAU,CAAE,+BAFC,CAGbC,WAAW,CAAE,sCAHA,CAIbC,SAAS,CAAE,eAJE,CAKbC,aAAa,CAAE,2BALF,CAMbC,iBAAiB,CAAE,cANN,CAObC,KAAK,CAAE,2CAPM,CAQbC,aAAa,CAAE,cARF,CAAf,CAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,EAEA;AACA,MAAO,IAAMU,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAAOC,QAAP,CAAiBC,cAAjB,yLAClCD,QADkC,iEAEjCE,OAFiC,CAEvBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAFuB,kDAGhBH,OAAO,CAACI,GAAR,EAHgB,SAGjCC,QAHiC,kBAIlCA,QAAQ,CAACC,MAJyB,0BAK7BC,WAL6B,CAKNT,QALM,CAK7BS,WAL6B,CAKhBC,KALgB,CAKNV,QALM,CAKhBU,KALgB,CAM/BC,SAN+B,CAMnB,GAAIC,CAAAA,IAAJ,EANmB,mEAQ7BV,OAAO,CAACW,GAAR,gBACJJ,WAAW,CAAXA,WADI,CAEJC,KAAK,CAALA,KAFI,CAGJC,SAAS,CAATA,SAHI,EAIDV,cAJC,EAR6B,2FAenCa,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMC,OAAzC,EAfmC,wCAmBhCd,OAnBgC,oEAAlC,CAqBP;AACA,MAAO,IAAMe,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,CAAAC,WAAW,CAAI,CAC5D,GAAMC,CAAAA,qBAAqB,CAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqB,SAAAjB,GAAG,CAAI,eAC/BA,GAAG,CAACkB,IAAJ,EAD+B,CAChDC,KADgD,WAChDA,KADgD,CACzCC,KADyC,WACzCA,KADyC,CAGxD,MAAO,CACLC,SAAS,CAAEC,SAAS,CAACH,KAAK,CAACI,WAAN,EAAD,CADf,CAELC,EAAE,CAAExB,GAAG,CAACwB,EAFH,CAGLL,KAAK,CAALA,KAHK,CAILC,KAAK,CAALA,KAJK,CAAP,CAMD,CAT6B,CAA9B,CAWA,MAAOL,CAAAA,qBAAqB,CAACU,MAAtB,CAA6B,SAACC,WAAD,CAAcC,UAAd,CAA6B,CAC/DD,WAAW,CAACC,UAAU,CAACR,KAAX,CAAiBI,WAAjB,EAAD,CAAX,CAA8CI,UAA9C,CACA,MAAOD,CAAAA,WAAP,CACD,CAHM,CAGJ,EAHI,CAAP,CAID,CAhBM,CAkBP,MAAO,IAAME,CAAAA,IAAI,CAAG5C,QAAQ,CAAC4C,IAAT,EAAb,CACP,MAAO,IAAM7B,CAAAA,SAAS,CAAGf,QAAQ,CAACe,SAAT,EAAlB,CAEP,GAAM8B,CAAAA,QAAQ,CAAG,GAAI7C,CAAAA,QAAQ,CAAC4C,IAAT,CAAcE,kBAAlB,EAAjB,CACAD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe7C,CAAAA,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCoKey_zuOkMEmVCmC7xy91OGLhwhVbhzc\",\n  authDomain: \"crwn-db-dc449.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-dc449.firebaseio.com\",\n  projectId: \"crwn-db-dc449\",\n  storageBucket: \"crwn-db-dc449.appspot.com\",\n  messagingSenderId: \"961035834696\",\n  appId: \"1:961035834696:web:53b242aff63f646dc88f7d\",\n  measurementId: \"G-FBGM1FM3GM\"\n};\n\nfirebase.initializeApp(config);\n\n// Firebase authentification\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n// Firebase Add Collection and Document\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}