{"ast":null,"code":"import _classCallCheck from\"E:\\\\4 - Training\\\\React-Playground\\\\React Redux\\\\crown-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\4 - Training\\\\React-Playground\\\\React Redux\\\\crown-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"E:\\\\4 - Training\\\\React-Playground\\\\React Redux\\\\crown-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"E:\\\\4 - Training\\\\React-Playground\\\\React Redux\\\\crown-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"E:\\\\4 - Training\\\\React-Playground\\\\React Redux\\\\crown-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import{Route}from\"react-router-dom\";import{createStructuredSelector}from\"reselect\";import{connect}from\"react-redux\";import{fetchCollectionsStartAsync as _fetchCollectionsStartAsync}from\"../../redux/shop/shop.actions\";import{selectIsCollectionFetching}from\"../../redux/shop/shop.selectors\";import WithSpinner from\"../../components/with-spinner/with-spinner.component\";import CollectionsOverview from\"../../components/collections-overview/collections-overview.component\";import CollectionPage from\"../collection/collection.component\";var CollectionsOverviewWithSpinner=WithSpinner(CollectionsOverview);var CollectionPageWithSpinner=WithSpinner(CollectionPage);var ShopPage=/*#__PURE__*/function(_React$Component){_inherits(ShopPage,_React$Component);function ShopPage(){var _getPrototypeOf2;var _this;_classCallCheck(this,ShopPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ShopPage)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.unsubscribeFromSnapshot=null;return _this;}_createClass(ShopPage,[{key:\"componentDidMount\",value:function componentDidMount(){// const { updateCollections } = this.props;\n// const collectionRef = firestore.collection(\"collections\");\n//\n// // Observable Methode\n// this.unsubscribeFromSnapshot = collectionRef.onSnapshot(snapshot => {\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//   updateCollections(collectionsMap);\n//   this.state({ loading: false });\n// });\n// Promise Methode\n// collectionRef.get().then(snapshot => {\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//   updateCollections(collectionsMap);\n//   this.setState({ loading: false });\n// });\n// API Methode\n// fetch('some url').then(response => response.json()).then(collections => console.log(collections))\nvar fetchCollectionsStartAsync=this.props.fetchCollectionsStartAsync;fetchCollectionsStartAsync();}},{key:\"render\",value:function render(){var _this$props=this.props,match=_this$props.match,isCollectionFetching=_this$props.isCollectionFetching;return React.createElement(\"div\",{className:\"shop-page\"},React.createElement(Route,{exact:true,path:\"\".concat(match.path),render:function render(props){return React.createElement(CollectionsOverviewWithSpinner,Object.assign({isLoading:isCollectionFetching},props));}}),React.createElement(Route,{path:\"\".concat(match.path,\"/:collectionId\"),render:function render(props){return React.createElement(CollectionPageWithSpinner,Object.assign({isLoading:isCollectionFetching},props));}}));}}]);return ShopPage;}(React.Component);var mapStateToProps=createStructuredSelector({isCollectionFetching:selectIsCollectionFetching});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchCollectionsStartAsync:function fetchCollectionsStartAsync(){return dispatch(_fetchCollectionsStartAsync());}};};export default connect(mapStateToProps,mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/4 - Training/React-Playground/React Redux/crown-store/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","unsubscribeFromSnapshot","props","match","isCollectionFetching","path","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"wuBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,0BAA0B,GAA1BA,CAAAA,2BAAT,KAA2C,+BAA3C,CACA,OAASC,0BAAT,KAA2C,iCAA3C,CAEA,MAAOC,CAAAA,WAAP,KAAwB,sDAAxB,CAEA,MAAOC,CAAAA,mBAAP,KAAgC,sEAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CAEA,GAAMC,CAAAA,8BAA8B,CAAGH,WAAW,CAACC,mBAAD,CAAlD,CACA,GAAMG,CAAAA,yBAAyB,CAAGJ,WAAW,CAACE,cAAD,CAA7C,C,GAEMG,CAAAA,Q,mZAKJC,uB,CAA0B,I,iGAEN,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBkB,GAkBVR,CAAAA,0BAlBU,CAkBqB,KAAKS,KAlB1B,CAkBVT,0BAlBU,CAmBlBA,0BAA0B,GAC3B,C,uCAEQ,iBACiC,KAAKS,KADtC,CACCC,KADD,aACCA,KADD,CACQC,oBADR,aACQA,oBADR,CAGP,MACE,4BAAK,SAAS,CAAC,WAAf,EACE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,WAAKD,KAAK,CAACE,IAAX,CAFN,CAGE,MAAM,CAAE,gBAAAH,KAAK,QACX,qBAAC,8BAAD,gBACE,SAAS,CAAEE,oBADb,EAEMF,KAFN,EADW,EAHf,EADF,CAWE,oBAAC,KAAD,EACE,IAAI,WAAKC,KAAK,CAACE,IAAX,kBADN,CAEE,MAAM,CAAE,gBAAAH,KAAK,QACX,qBAAC,yBAAD,gBACE,SAAS,CAAEE,oBADb,EAEMF,KAFN,EADW,EAFf,EAXF,CADF,CAuBD,C,sBAvDoBb,KAAK,CAACiB,S,EA0D7B,GAAMC,CAAAA,eAAe,CAAGhB,wBAAwB,CAAC,CAC/Ca,oBAAoB,CAAEV,0BADyB,CAAD,CAAhD,CAIA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtChB,0BAA0B,CAAE,4CAAMgB,CAAAA,QAAQ,CAAChB,2BAA0B,EAA3B,CAAd,EADU,CAAL,EAAnC,CAIA,cAAeD,CAAAA,OAAO,CAACe,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  // state = {\n  //   loading: true\n  // };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n    //\n    // // Observable Methode\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.state({ loading: false });\n    // });\n    // Promise Methode\n    // collectionRef.get().then(snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // });\n    // API Methode\n    // fetch('some url').then(response => response.json()).then(collections => console.log(collections))\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isCollectionFetching } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}